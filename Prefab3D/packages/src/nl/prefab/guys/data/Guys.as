//Prefab3D. www.closier.nl/prefab .  Fabrice Closier 2012package nl.prefab.guys.data{	import nl.prefab.guys.data.PropertyData;	import nl.prefab.guys.IGuy;	import nl.prefab.guys.types.LookAtGuy;	import nl.prefab.guys.Guy;		public class Guys {		 		private static var _guys:Vector.<IGuy>;		private static var _hasGuys:Boolean;		private static var _paused:Boolean;		 		public static function update():void		{			if(!_hasGuys || _paused) return;						for(var i:uint = 0;i<_guys.length;++i){				_guys[i].update();								/*if(_guys[i].hasEventListener(GuyEvent.UPDATE))				   	_guys[i].dispatchGuyEvent(GuyEvent.UPDATE, null);*/			}		}				public static function restore():void		{			if(!_hasGuys) return;						for(var i:uint = 0;i<_guys.length;++i)				_guys[i].restore();		}				public static function set paused(b:Boolean):void		{			_paused = b;						if(b){				for(var i:uint = 0;i<_guys.length;++i)					Guy(_guys[i]).active = true;			}		}		public static function get paused():Boolean		{			return _paused;		}		 		public static function register(guy:IGuy):void		{			if(!_guys) _guys = new Vector.<IGuy>();						_guys.push(guy);			_guys.sort(sortFunction);			_hasGuys = true;		}				public static function unregister(guy:IGuy, destroy:Boolean = false):void		{			if(!_guys) return;					for(var i:uint = 0;i<_guys.length;++i){				if(_guys[i] == guy){					if(destroy) _guys[i] = null;					_guys.splice(i,1);					break;				}			}						_hasGuys = (_guys.length>0)? true : false;		}		// to unregister an object from guys when no guys known		public static function unregisterFromGuys(obj:Object):void		{			if(!_guys) return;			var guy:IGuy;			for(var i:uint = 0;i<_guys.length;++i){				guy = _guys[i];				guy.unregister(obj);			}		}				public static function getGuyFromId(id:String):IGuy		{			if(!_guys) return null;						for(var i:uint = 0;i<_guys.length;++i)				if(_guys[i].id == id) return _guys[i];							return null;		}				public static function get guys():Vector.<IGuy>		{			return _guys;		}				public static function get hasGuys():Boolean		{			return _hasGuys;		}				private static function sortFunction(a:IGuy, b:IGuy):Number		{			 if(a is LookAtGuy) return 1;			 return 0;		}			}}